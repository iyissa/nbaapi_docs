(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{454:function(t,a,s){"use strict";s.r(a);var n=s(13),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),a("p",[t._v("All endpoints in this package always need either a "),a("code",[t._v("player ID")]),t._v(" or "),a("code",[t._v("team ID")]),t._v(". Both of these are gotten from the Static module.")]),t._v(" "),a("h2",{attrs:{id:"player-id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#player-id"}},[t._v("#")]),t._v(" Player ID")]),t._v(" "),a("p",[t._v("You can find players using a regex pattern "),a("code",[t._v("case-insensitive")]),t._v(" by full name, first name, last_name.")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" nba_api"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stats"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("static "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" players\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Find players by full name.")]),t._v("\nplayers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find_players_by_full_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Find players by first name.")]),t._v("\nplayers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find_players_by_first_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Find players by last name.")]),t._v("\nplayers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find_players_by_last_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Get all players.")]),t._v("\nplayers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_players"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"team-id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#team-id"}},[t._v("#")]),t._v(" Team ID")]),t._v(" "),a("p",[t._v("You can find teams using regex patterns on fields such as full name, state, city, and nickname. As well as finding teams by year founded, abbreviation, and id.")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" nba_api"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stats"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("static "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" teams\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Find teams by full name.")]),t._v("\nteams"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find_teams_by_full_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cav'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Find teams by state.")]),t._v("\nteams"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find_teams_by_state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ohio'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Find teams by city.")]),t._v("\nteams"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find_teams_by_city"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cleveland'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Find teams by team nickname.")]),t._v("\nteams"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find_teams_by_nickname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cav'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Find teams by year founded.")]),t._v("\nteams"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find_teams_by_year_founded"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1968")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Find teams by abbreviation.")]),t._v("\nteams"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find_team_by_abbreviation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cle'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Find teams by id.")]),t._v("\nteams"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find_team_name_by_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1610612739")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Get all teams.")]),t._v("\nteams"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_teams"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"accessing-with-the-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#accessing-with-the-data"}},[t._v("#")]),t._v(" Accessing with the data")]),t._v(" "),a("p",[t._v("You can retrieve the data in different formats. The availabale formats are "),a("code",[t._v("json")]),t._v(", a "),a("code",[t._v("dictionary")]),t._v(", a normalized "),a("code",[t._v("json")]),t._v(" dictionary ("),a("code",[t._v("header:value")]),t._v(" format), a normalized "),a("code",[t._v("dictionary")]),t._v(", and in a list of pandas "),a("code",[t._v("DataFrame")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Returns the raw response of the request.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Returns all data in a JSON string.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_json"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Returns all data in a dictionary.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Returns all data in a normalized JSON string.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_normalized_json"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Returns all data in a normalized dictionary.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_normalized_dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Returns a list of all data in a pandas DataFrame structure.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_data_frames"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" Example")]),t._v(" "),a("h3",{attrs:{id:"finding-player-id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#finding-player-id"}},[t._v("#")]),t._v(" Finding Player ID.")]),t._v(" "),a("p",[t._v("To get Lebron James' id")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" nba_api"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stats"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("static "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" players \n\nlebron "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" players"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find_players_by_full_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Lebron James"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"admonition success"},[a("p",{staticClass:"admonition-title"},[t._v("RESULT ")]),t._v(" "),a("p",[a("code",[t._v("[{'id': 2544,'full_name': 'LeBron James','first_name': 'LeBron','last_name': 'James','is_active': True}]")])])]),t._v(" "),a("h3",{attrs:{id:"finding-team-id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#finding-team-id"}},[t._v("#")]),t._v(" Finding Team ID.")]),t._v(" "),a("p",[t._v("To get Golden State Warriors")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("from nba_api.stats.static import teams\n\nteams.find_team_by_abbreviation('gsw')\n")])])]),a("div",{staticClass:"admonition success"},[a("p",{staticClass:"admonition-title"},[t._v("RESULT ")]),t._v(" "),a("p",[a("code",[t._v("{'id': 1610612744,'full_name': 'Golden State Warriors','abbreviation': 'GSW','nickname': 'Warriors','city': 'Golden State','state':'California','year_founded': 1946}")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);